simpleArgs: &simple-args
  initialMoney: 10000
  moneyToTransfer: 100
  numberOfAccounts: &number-of-accounts 1000
test:
  name: fixed-asset-test
  description: >-
    This is a test yaml for the existing fixed-asset benchmarks
  workers:
    type: local
    number: 2
  rounds:
    - label: empty-contract-evaluate
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/open.js
        arguments: *simple-args
    - label: empty-contract-submit
      
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
         module: benchmarks/scenario/simple/query.js
         arguments: *simple-args
    - label: create-asset-1000
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/transfer.js
        arguments:
          << : *simple-args
          money: 100
    - label: get-asset-evaluate-100
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/query.js
        arguments: *simple-args
    - label: get-asset-submit-200
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/query.js
        arguments: *simple-args
    - label: rich-query-evaluate
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/query.js
        arguments: *simple-args
    - label: rich-query-submit
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/query.js
        arguments: *simple-args
    - label: range-query-evaluate
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/query.js
        arguments: *simple-args
    - label: range-query-submit
      txNumber: *number-of-accounts
      rateControl:
        type: fixed-rate
        opts:
          tps: 2
      workload:
        module: benchmarks/scenario/simple/query.js
        arguments: *simple-args
monitors:
    transaction:
       - module: prometheus
    resource:
      - module: docker
        options:
          interval: 1
          containers: ['all']
          charting:
          bar:
            metrics: [Memory(avg), CPU%(avg)]
          polar:
            metrics: [all]
      - module: prometheus
        options:
          url: "http://localhost:9090"
          metrics:
              include: []
              queries:
                  - name: Endorse Time (s)
                    query: rate(endorser_propsal_duration_sum{chaincode="marbles:v0"}[1m])/rate(endorser_propsal_duration_count{chaincode="marbles:v0"}[1m])
                    step: 1
                    label: instance
                    statistic: avg
                  - name: Max Memory (MB)
                    query: sum(container_memory_rss{name=~".+"}) by (name)
                    step: 10
                    label: name
                    statistic: max
                    multiplier: 0.000001
          charting:
            polar:
              metrics: [Max Memory (MB)]
            bar:
              metrics: [all]
